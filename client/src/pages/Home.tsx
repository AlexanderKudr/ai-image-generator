import { useEffect, useState } from "react";
import { Container } from "../components";
import { Spinner, Card, FormField } from "../components/";

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [posts, setPosts] = useState(null);
  const [search, setSearch] = useState("");
  type CardsProps<T> = {
    data: T | string[];
    title: string;
  };
  const RenderCards = ({ data, title }: CardsProps<any>) => {
    if (data?.length > 0) {
      return data.map((post: any) => <Card key={post._id} {...post} />);
    }
    return <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>;
  };
  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch("http://localhost:8050/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });
        if (response.ok) {
          const data = await response.json();
          setPosts(data.data.reverse());
          console.log("fired", data);
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  return (
    <Container>
      <section className="max-w-7xl mx-auto">
        <div>
          <h1 className="font-extrabold text-[#222328] text-[32px]">Showcase</h1>
          <p className="mt-2 text-[#666e75] text-[16px]">
            Browse through collections of imaginative and stunning images generated by AI
          </p>
        </div>
        <div className="mt-16">
          <FormField />
        </div>
        <div className="mt-10">
          {loading ? (
            <div className="flex justify-center items-center">
              <Spinner />
            </div>
          ) : (
            <>
              {search && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3 ">
                  Showing results for <span className="text-[#222328]">{search}</span>
                </h2>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {search ? (
                  <RenderCards data={posts!} title="No results found" />
                ) : (
                  <RenderCards data={posts!} title="No posts found" />
                )}
              </div>
            </>
          )}
        </div>
      </section>
    </Container>
  );
}
